//7.1.14 Una fÃ¡brica produce 14 tipos de muebles de oficina con la mano de obra de 25 operarios especializados.
//       Al finalizar el mes se genera una planilla donde cada registro indica:
//             o DÃ­a hÃ¡bil del mes de fabricaciÃ³n (entero, de 1 a 22).
//             o Tipo de mueble que se fabricÃ³ (entero, de 1 a 14).
//             o CÃ³digo del operario que fabricÃ³ el mueble (entero, de 1 a 25).
//En la Ãºltima informaciÃ³n presentada, se ingresÃ³ un dÃ­a hÃ¡bil negativo. No hay orden alguno en los datos
//ingresados y un mismo operario puede hacer mÃ¡s de un mueble (del mismo tipo o no) durante el mes.
//Determinar e informar:
//       a. La cantidad de cada tipo de mueble fabricado durante el mes.
//       b. El tipo de mueble del cual se ha fabricado la mayor cantidad. (puede haber mÃ¡s de uno).
//       c. El listado ordenado en forma ascendente por cantidad de muebles fabricados por operario (sin importar el tipo),
//          indicando:
//              CÃ³digo de Operario Cantidad de muebles fabricados
//                       XX                XXX
//       d. El dÃ­a o dÃ­as hÃ¡biles en los cuales no hubo producciÃ³n.

#include <stdio.h>
#include <stdlib.h>
//PROTOTIPOS DE FUNCIONES
void blanco(int [],int );
int valida(int,int,int);
int valida_entero_negativo(int,int,int);
void ordenar_vector(int [],int,int[]);
void Mostrar_Punto_a(int[],int);
int Mostrar_Punto_b(int[],int);
void Mostrar_Punto_c(int[],int,int []);
int Mostrar_Punto_d(int[],int);
void mostrarMaximo (int[],int, int);
void mostrarMinimo (int[], int, int);
//_______________
//TRONCO PROGRAMA
int main()
{
 int dia, tipo, Cod_Ope, maximo,minimo;
 int V_dia[22],V_tipo[14],V_Cod_Ope[25],numoperario[25]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25};
 blanco(V_dia,22);
 blanco(V_tipo,14);
 blanco(V_Cod_Ope,25);
 dia=valida_entero_negativo(0,1,22);
 while(dia>0)
     {
      	V_dia[dia-1]++;
      	tipo=valida(1,14,1);
      	V_tipo[tipo-1]++;
      	Cod_Ope=valida(1,25,2);
      	V_Cod_Ope[Cod_Ope-1]++;
      	dia=valida_entero_negativo(0,1,22);
	 }
  Mostrar_Punto_a(V_tipo,14);
  maximo=Mostrar_Punto_b(V_tipo,14);
  mostrarMaximo(V_tipo,maximo,14);
  Mostrar_Punto_c(V_Cod_Ope,25,numoperario);
  minimo=Mostrar_Punto_d(V_dia,22);
  mostrarMinimo(V_dia,minimo,22);
  return 0;
}
//____________________
//FUNCIONES DESARROLLO
void blanco(int a[],int n)
{
 int x;
 for(x=0;x<n;x++)
 {
  a[x]=0;
 }
};
//__________________________
int valida(int i,int f,int t)
{
	int dato;
	do
	{
	  printf("\n Ingrese ");
	  if(t==1)printf(" Tipo de Mueble  [1 a 14]:");
      if(t==2)printf(" Codigo Operador [1 a 25]:");
	  scanf("%d",&dato);
	}while(dato<i||dato>f);
 return dato;
}
//___________________________________________
int valida_entero_negativo(int s,int i,int f)
{
	int dato;
	do
	{
	  printf("\n Ingrese dia trabajo [1 a 22] Salida Negativo:");
	  scanf("%d",&dato);
	}while((dato<i||dato>f)&&dato>=s);
  return dato;
}

void Mostrar_Punto_a(int Canttipo[],int n)
{
	int x;
	printf("TIPO: \t CANTIDAD:\n");
	for(x=0;x<n;x++)
    {
        printf("%d\t\t%d\n",x+1,Canttipo[x]);
    }
}

int Mostrar_Punto_b(int tipo_mueble[],int n)
{
    int max,i;
    max= tipo_mueble[0];
    for (i=1;i<n;i++)
    {
        if (tipo_mueble[i]>max)
            max=tipo_mueble[i];
    }
    return max;
}
//c. El listado ordenado en forma ascendente por cantidad de muebles fabricados por operario (sin importar el tipo),
//          indicando:
//              CÃ³digo de Operario Cantidad de muebles fabricados
//                       XX                XXX

void Mostrar_Punto_c(int cantPorOperario[],int n,int numoperario[] )
{
    int x;
    ordenar_vector(cantPorOperario,n,numoperario);
    for(x=0;x<n;x++)
    {
        printf("\nEl operario con codigo %d fabrico %d muebles", numoperario[x],cantPorOperario[x]);
    }
}
//El dÃ­a o dÃ­as hÃ¡biles en los cuales no hubo producciÃ³n.
int Mostrar_Punto_d(int CantProduccionDia[],int n)
{
    int min,i;
    min= CantProduccionDia[0];
    for (i=1;i<n;i++)
    {
        if (CantProduccionDia[i]<min)
            min=CantProduccionDia[i];
    }
    if (min==0)
        return 0;
    else
        return 1;
}
void ordenar_vector(int a[],int n, int b[])
{
	int x,aux,sen=0;
	while(sen==0)
	 {
	   sen=1;
	 	for(x=0;x<n-1;x++)
	 	{
          if(a[x]>a[x+1])
		     {
              aux=a[x];
		      a[x]=a[x+1];
		      a[x+1]=aux;
		      aux=b[x];
		      b[x]=b[x+1];
		      b[x+1]=aux;
		      sen=0;
   		     }
		 }
	 }
}


void mostrarMaximo(int tipo[],int max, int n)
{
    int i,tipos[14]={1,2,3,4,5,6,7,8,9,10,11,12,13,14};
    printf("\n\nLa mayor cantidad de producciones fue de %d, del tipo/s de mueble: \n",max);
    for (i=0;i<n;i++)
    {
        if(tipo[i]==max)
            printf("\n%d\n",tipos[i]);
    }
}

void mostrarMinimo (int cantDia[], int min , int n)
{
    int i;
    if (min==0)
    {
        printf("\n\nLos dias que no hubieron produccion fueron: \n");
            for (i=0;i<n;i++)
            {
                if(cantDia[i]==min)
                    printf("\n%d\n",i);
            }
    }
    if(min!=0)
        printf("\n\nTodos los dias hubo produccion");
}
